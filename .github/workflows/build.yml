name: Build Executables for Multiple Platforms

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Permite ejecución manual del workflow

jobs:
  build:
    strategy:
      matrix:
#        os: [ubuntu-20.04, macos-latest, windows-latest]  # macos-latest
        os: [ubuntu-20.04]  # macos-latest
#        arch: [x86_64, arm64]  # amd64 y arm64
        arch: [x86_64]  # amd64 y arm64
        exclude:
          - os: windows-latest
            arch: arm64  # Windows solo se compila para x86 (32/64-bit)
        python-version: ["3.10.10"]

    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          
#      - name: Install dependencies (Linux/MacOS)
#        if: matrix.os != 'windows-latest'
#        run: |
#          python3 -m pip install --upgrade pip
#           pip3 install cibuildwheel
#           if [ -f src/requirements.txt ]; then pip install -r src/requirements.txt; fi
#        shell: bash
#
#      - name: Install dependencies (Windows)
#        if: matrix.os == 'windows-latest'
#        run: |
#         python3 -m pip install --upgrade pip
#         pip3 install cibuildwheel
#         if exist src\requirements.txt ( pip install -r src\requirements.txt )
#        shell: cmd

      # Compilación para Linux
      - name: Compile for Linux
        if: matrix.os == 'ubuntu-20.04'
        run: |
          cd src
          python3 _compile.py | tee tmp_output.log
          ARCHIVE_PATH=$(tail -n 1 tmp_output.log)
          ARCHIVE_NAME=$(basename "$ARCHIVE_PATH")  # Extrae solo el nombre del archivo
          echo "ARCHIVE_PATH=$ARCHIVE_PATH" >> $GITHUB_ENV
          echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> $GITHUB_ENV
          if [ ! -f "$ARCHIVE_PATH" ]; then
            echo "Error: No se encontró el archivo comprimido."
            exit 1
          fi
        shell: bash


#      # Compilación para macOS (usando macos-latest)
#      - name: Compile for MacOS
#        if: matrix.os == 'macos-latest'
#        run: |
#          cd src
#          python3 _compile.py | tee tmp_output.log
#          ARCHIVE_PATH=$(tail -n 1 tmp_output.log)
#          ARCHIVE_NAME=$(basename "$ARCHIVE_PATH")  # Extrae solo el nombre del archivo
#          echo "ARCHIVE_PATH=$ARCHIVE_PATH" >> $GITHUB_ENV
#          echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> $GITHUB_ENV
#          if [ ! -f "$ARCHIVE_PATH" ]; then
#            echo "Error: No se encontró el archivo comprimido."
#            exit 1
#          fi
#        shell: bash
#
#      # Compilación para Windows
#      - name: Compile for Windows
#        if: matrix.os == 'windows-latest'
#        run: |
#          cd src
#          python3 _compile.py | tee tmp_output.log
#          FOR /F "tokens=*" %%A IN ('type tmp_output.log') DO @SET ARCHIVE_PATH=%%A
#          FOR %%I IN (%ARCHIVE_PATH%) DO @SET ARCHIVE_NAME=%%~nxI
#          echo ARCHIVE_PATH=%ARCHIVE_PATH% >> %GITHUB_ENV%
#          echo ARCHIVE_NAME=%ARCHIVE_NAME% >> %GITHUB_ENV%
#          if not exist %ARCHIVE_PATH% (
#            echo Error: No se encontró el archivo comprimido.
#            exit /b 1
#          )
#          shell: cmd

      # Subir los ejecutables generados usando la ruta completa
      - name: Archive Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: _built_versions/${{ env.ARCHIVE_NAME }}